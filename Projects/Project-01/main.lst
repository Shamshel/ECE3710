


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Runs on any Cortex M processor
    3 00000000         ;
    4 00000000         ; The bar graph is attached to ports B0:7 and A2:3 and i
                       s active low.
    5 00000000         ;
    6 00000000         ; The button is connected between ground and A7.  There 
                       is no pull resistor.
    7 00000000         ; The dev board switches are connnected to ports F0 and 
                       F4
    8 00000000         
    9 00000000         
   10 00000000                 THUMB
   11 00000000                 AREA             DATA, ALIGN=2
   12 00000000                 ALIGN
   13 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   14 00000000                 EXPORT           Start
   15 00000000         
   16 00000000         ; offsets
   17 00000000 000003FC 
                       GPIODATA
                               EQU              0x3FC
   18 00000000 00000400 
                       GPIODIR EQU              0x400
   19 00000000 00000404 
                       GPIOIS  EQU              0x404
   20 00000000 00000408 
                       GPIOIBE EQU              0x408
   21 00000000 0000040C 
                       GPIOIEV EQU              0x40C
   22 00000000 00000410 
                       GPIOIM  EQU              0x410
   23 00000000 00000414 
                       GPIORIS EQU              0x414
   24 00000000 00000418 
                       GPIOMIS EQU              0x418
   25 00000000 00000500 
                       GPIODR2R
                               EQU              0x500
   26 00000000 00000504 
                       GPIODR4R
                               EQU              0x504
   27 00000000 00000508 
                       GPIODR8R
                               EQU              0x508
   28 00000000 0000050C 
                       GPIOODR EQU              0x50C
   29 00000000 00000510 
                       GPIOPUR EQU              0x510
   30 00000000 00000514 
                       GPIOPDR EQU              0x514
   31 00000000 0000051C 
                       GPIODEN EQU              0x51C
   32 00000000 00000520 
                       GPIOLOCK
                               EQU              0x520
   33 00000000 00000524 
                       GPIOCR  EQU              0x524



ARM Macro Assembler    Page 2 


   34 00000000         
   35 00000000         ; Timer
   36 00000000 00000000 
                       GPTMCFG EQU              0x000       ; GPTM config
   37 00000000 00000004 
                       GPTMTAMR
                               EQU              0x004       ; Timer A mode
   38 00000000 00000008 
                       GPTMTBMR
                               EQU              0x008       ; Timer B mode
   39 00000000 0000000C 
                       GPTMCTL EQU              0x00C       ; GPTM control
   40 00000000 0000001C 
                       GPTMRIS EQU              0x01C       ; interrupt status
   41 00000000 00000024 
                       GPTMICR EQU              0x024       ; interrupt clear
   42 00000000 00000028 
                       GPTMTAILR
                               EQU              0x028       ; Timer A interval
   43 00000000 0000002C 
                       GPTMTBLRR
                               EQU              0x02C       ; Timer b interval
   44 00000000 00000048 
                       GPTMTAR EQU              0x048
   45 00000000 00000001 
                       GPTMOS  DCD              0x01        ; one shot mode
   46 00000004 00000002 
                       GPTMPM  DCD              0x02        ; periodic mode
   47 00000008         
   48 00000008         ; base addrs
   49 00000008         
   50 00000008         ; GPIO
   51 00000008 40004000 
                       GPIOA   DCD              0x40004000
   52 0000000C 40005000 
                       GPIOB   DCD              0x40005000
   53 00000010 40006000 
                       GPIOC   DCD              0x40006000
   54 00000014 40007000 
                       GPIOD   DCD              0x40007000
   55 00000018 40024000 
                       GPIOE   DCD              0x40024000
   56 0000001C 40025000 
                       GPIOF   DCD              0x40025000
   57 00000020         
   58 00000020         ; timers
   59 00000020 40030000 
                       TMR0    DCD              0x40030000
   60 00000024 40031000 
                       TMR1    DCD              0x40031000
   61 00000028 40032000 
                       TMR2    DCD              0x40032000
   62 0000002C 40033000 
                       TMR3    DCD              0x40033000
   63 00000030 40034000 
                       TMR4    DCD              0x40034000
   64 00000034 40035000 
                       TMR5    DCD              0x40035000
   65 00000038 40036000 



ARM Macro Assembler    Page 3 


                       WTMR0   DCD              0x40036000
   66 0000003C 40037000 
                       WTMR1   DCD              0x40037000
   67 00000040 4004C000 
                       WTMR2   DCD              0x4004C000
   68 00000044 4004D000 
                       WTMR3   DCD              0x4004D000
   69 00000048 4004E000 
                       WTMR4   DCD              0x4004E000
   70 0000004C 4004F000 
                       WTMR5   DCD              0x4004F000
   71 00000050         
   72 00000050         ;arbitrary init values
   73 00000050 00000023 
                       CLKSET  DCD              0x23        ; init ports A, B, 
                                                            and F
   74 00000054 0000000C 
                       PORTAOUTSET
                               DCD              0x0C        ; 2:3 are output
   75 00000058 000000C0 
                       PORTAINSET
                               DCD              0xC0        ; 6:7 is input
   76 0000005C 000000FF 
                       PORTBOUTSET
                               DCD              0xFF        ; 0:7 are output
   77 00000060 00000000 
                       PORTBINSET
                               DCD              0x00        ; no input on B
   78 00000064 00000000 
                       PORTFOUTSET
                               DCD              0x00        ; no output on F
   79 00000068 0000000F 
                       PORTFINSET
                               DCD              0x0F        ; 0:3 are input
   80 0000006C         
   81 0000006C FFFF6F7F 
                       GPTMCTLMASK
                               DCD              0xFFFF6F7F  ; clear GPTMCTL
   82 00000070 FFFFFFF8 
                       GPTMCFGMASK
                               DCD              0xFFFFFFF8  ; clear GPTMCFG
   83 00000074 FFFFFFFC 
                       GPTMTAMRMASK
                               DCD              0xFFFFFFFC  ; clear GPTMTAMR
   84 00000078         
   85 00000078         ; .25 seconds *16000000 cycles = 600000 cycles = 0x3D090
                       0 cycles
   86 00000078 003D0900 
                       TIMEOUT DCD              0x3D0900
   87 0000007C 00F42400 
                       TIMEOUTSEC
                               DCD              0xF42400
   88 00000080         
   89 00000080         ; game timeout constants
   90 00000080 004E2000 
                       MS320   DCD              0x4E2000
   91 00000084 00138800 
                       MS80    DCD              0x138800
   92 00000088         



ARM Macro Assembler    Page 4 


   93 00000088         ; RCGC1 register setup
   94 00000088 00030000 
                       TMRSET  DCD              0x30000
   95 0000008C         
   96 0000008C 400FE108 
                       RCGCGPIO
                               DCD              0x400FE108
   97 00000090 400FE104 
                       RCGC1   DCD              0x400FE104
   98 00000094         
   99 00000094 00000002 
                       SETUP   DCD              0x02        ; pin 1 init
  100 00000098         
  101 00000098         Start
  102 00000098         ; init gpios: see pg 651 of the TI datasheet.
  103 00000098         ; set up RCGCGPIO
  104 00000098 F85F 0010       LDR              r0, RCGCGPIO
  105 0000009C F85F 1050       LDR              r1, CLKSET
  106 000000A0 6001            STR              r1, [r0]
  107 000000A2         
  108 000000A2         ; enable clock for TMR0
  109 000000A2 F85F 0014       LDR              r0, RCGC1
  110 000000A6 F85F 1020       LDR              r1, TMRSET
  111 000000AA 6001            STR              r1, [r0]
  112 000000AC         
  113 000000AC         ; init GPIOA
  114 000000AC F85F 00A8       LDR              r0, GPIOA   ; load port A base
  115 000000B0 F85F 1060       LDR              r1, PORTAOUTSET
  116 000000B4 F85F 2060       LDR              r2, PORTAINSET
  117 000000B8 F000 F830       BL               GPIO_init
  118 000000BC         
  119 000000BC         ; turn off LEDs
  120 000000BC F04F 010C       MOV              r1, #0x0C
  121 000000C0 F8C0 13FC       STR              r1, [r0, #GPIODATA]
  122 000000C4         
  123 000000C4         ; init GPIOB
  124 000000C4 F85F 00BC       LDR              r0, GPIOB
  125 000000C8 F85F 1070       LDR              r1, PORTBOUTSET
  126 000000CC F85F 2070       LDR              r2, PORTBINSET
  127 000000D0 F000 F824       BL               GPIO_init
  128 000000D4         
  129 000000D4 F04F 01FF       MOV              r1, #0xFF
  130 000000D8 F8C0 13FC       STR              r1, [r0, #GPIODATA]
  131 000000DC         
  132 000000DC         ; init GPIOF
  133 000000DC         ; TI felt it wise to lock
  134 000000DC         ; port F... unlock it
  135 000000DC F85F 00C4       LDR              r0, GPIOF
  136 000000E0 49C5            LDR              r1, =0x4C4F434B
  137 000000E2 F8C0 1520       STR              r1, [r0, #GPIOLOCK]
  138 000000E6         
  139 000000E6         ; enable commit to all pins
  140 000000E6 F04F 01FF       MOV              r1, #0xFF
  141 000000EA F8C0 1524       STR              r1, [r0, #GPIOCR]
  142 000000EE         
  143 000000EE         ;back to the good stuff:
  144 000000EE F85F 108C       LDR              r1, PORTFOUTSET
  145 000000F2 F85F 208C       LDR              r2, PORTFINSET
  146 000000F6 F000 F811       BL               GPIO_init



ARM Macro Assembler    Page 5 


  147 000000FA         
  148 000000FA         ; init timer 0
  149 000000FA         ; configure for one-shot
  150 000000FA F85F 00DC       LDR              r0, TMR0
  151 000000FE F85F 1088       LDR              r1, TIMEOUT
  152 00000102 F85F 2100       LDR              r2, GPTMPM
  153 00000106 F000 F816       BL               TMR_init
  154 0000010A         
  155 0000010A         
  156 0000010A         ; init timer 1
  157 0000010A         ; configure for periodic
  158 0000010A F85F 00E8       LDR              r0, TMR1
  159 0000010E F85F 1094       LDR              r1, TIMEOUTSEC
  160 00000112 F85F 2110       LDR              r2, GPTMPM
  161 00000116 F000 F80E       BL               TMR_init
  162 0000011A         
  163 0000011A         ; setup complete, continue with application
  164 0000011A         
  165 0000011A E044            B                main
  166 0000011C         
  167 0000011C         GPIO_init                            ; r0 stores base ad
                                                            dress, r1 stores ou
                                                            t val, r2 stores in
                                                             val, r3 will store
                                                             the or of the two
  168 0000011C EA42 0301       ORR              r3, r2, r1  ; store active pins
                                                            
  169 00000120 F8C0 1400       STR              r1, [r0, #GPIODIR] 
                                                            ; set directions
  170 00000124 F8C0 3500       STR              r3, [r0, #GPIODR2R] 
                                                            ; set power (2mA)
  171 00000128 F8C0 150C       STR              r1, [r0, #GPIOODR] ; set output
                                                            s open drain
  172 0000012C F8C0 2514       STR              r2, [r0, #GPIOPDR] ; set inputs
                                                             to pull downs
  173 00000130 F8C0 351C       STR              r3, [r0, #GPIODEN] 
                                                            ; enable pins
  174 00000134 4770            BX               lr
  175 00000136         
  176 00000136         ; enable clock for TMR1
  177 00000136         ; TMR setup
  178 00000136         ; 1. disable TnEN of GPTMCTL
  179 00000136         ; 2. write GPTMCFG with 0x00000000
  180 00000136         ; 3. configure TnMR in GPTMTnMR
  181 00000136         ; (one-shot 0x01, periodic 0x02)
  182 00000136         ; 4. configure the remainder of GPTMTnMR
  183 00000136         ; 5. load interval into GPTMTnILR
  184 00000136         ; 6. configure interrupts (GPTMIMR)
  185 00000136         ; 7. set TnEN in GPTMCTL to enable
  186 00000136         ; 8. poll GPTMRIS
  187 00000136         
  188 00000136         ; r0 stores base address, r1 stores counter value, r2 st
                       ores mode.
  189 00000136         ; configures timer for periodic concatenated (32-bit) op
                       eration
  190 00000136         TMR_init
  191 00000136 68C2            LDR              r2, [r0, #GPTMCTL] ; read
  192 00000138 F85F 30D0       LDR              r3, GPTMCTLMASK
  193 0000013C EA02 0203       AND              r2, r2, r3  ; modify



ARM Macro Assembler    Page 6 


  194 00000140 60C2            STR              r2, [r0, #GPTMCTL] ; write
  195 00000142 6802            LDR              r2, [r0, #GPTMCFG] ; read
  196 00000144 F85F 30D8       LDR              r3, GPTMCFGMASK
  197 00000148 EA02 0203       AND              r2, r2, r3  ; modify
  198 0000014C 6002            STR              r2, [r0, #GPTMCFG] ; write
  199 0000014E 6842            LDR              r2, [r0, #GPTMTAMR] ; read
  200 00000150 F85F 30E0       LDR              r3, GPTMTAMRMASK
  201 00000154 EA02 0203       AND              r2, r2, r3  ; modify
  202 00000158 F102 0202       ADD              r2, r2, #0x02 ; 0x02=periodic
  203 0000015C 6042            STR              r2, [r0, #GPTMTAMR] ; write
  204 0000015E 6281            STR              r1, [r0, #GPTMTAILR]
  205 00000160 F04F 0201       MOV              r2, #0x01   ; enable timer A
  206 00000164 60C2            STR              r2, [r0, #GPTMCTL]
  207 00000166         ; clear expiry flag
  208 00000166 F04F 0201       MOV              r2, #1
  209 0000016A 6242            STR              r2, [r0, #GPTMICR]
  210 0000016C BF00            NOP
  211 0000016E BF00            NOP
  212 00000170         
  213 00000170 4770            BX               lr
  214 00000172         
  215 00000172         ; 
  216 00000172         ; 
  217 00000172         
  218 00000172         updateLEDs
  219 00000172         ; push positions to LEDs
  220 00000172 EA42 0403       ORR              r4, r2, r3
  221 00000176 F5B4 7F80       CMP              r4, #0x100
  222 0000017A F04F 0500       MOV              r5, #0x00
  223 0000017E BF88            IT               HI
  224 00000180 F404 7540       ANDHI            r5, r4, #0x300
  225 00000184         
  226 00000184 EA4F 1595       LSR              r5, #6
  227 00000188 EA6F 0505       MVN              r5, r5
  228 0000018C         
  229 0000018C F004 04FF       AND              r4, #0xFF
  230 00000190 EA6F 0404       MVN              r4, r4
  231 00000194         
  232 00000194 F85F 018C       LDR              r0, GPIOB
  233 00000198 F8C0 43FC       STR              r4, [r0, #GPIODATA]
  234 0000019C         
  235 0000019C F85F 0198       LDR              r0, GPIOA
  236 000001A0 F8C0 53FC       STR              r5, [r0, #GPIODATA]
  237 000001A4         
  238 000001A4 4770            BX               lr
  239 000001A6         
  240 000001A6         main
  241 000001A6         ; program begin, start at step 3 (as in a reset)
  242 000001A6         ; flash LED's 4:5 at 2 Hz until button press detected
  243 000001A6 F04F 0200       MOV              r2, #0x00
  244 000001AA F000 F8EF       BL               playerReadyLoop
  245 000001AE         
  246 000001AE         ; set user LEDs
  247 000001AE F85F 01A4       LDR              r0, GPIOB
  248 000001B2 F04F 01CF       MOV              r1, #0xCF
  249 000001B6 F8C0 13FC       STR              r1, [r0, #GPIODATA]
  250 000001BA         
  251 000001BA         ; begin main game sequence
  252 000001BA         ; r2=p1 pos, r3=p2 pos, begin in center



ARM Macro Assembler    Page 7 


  253 000001BA         ; r7 is draw counter
  254 000001BA F04F 0210       MOV              r2, #0x10
  255 000001BE F04F 0320       MOV              r3, #0x20
  256 000001C2 F04F 0700       MOV              r7, #0
  257 000001C6 E027            B                gameLoop
  258 000001C8         
  259 000001C8         FinPrep
  260 000001C8 4616            MOV              r6, r2
  261 000001CA 461F            MOV              r7, r3
  262 000001CC         
  263 000001CC         ; load timer with new value, wait for
  264 000001CC         ; timeout or response
  265 000001CC F04F 0100       MOV              r1, #0
  266 000001D0 F85F 01B4       LDR              r0, TMR0
  267 000001D4         ; disable timer 0
  268 000001D4 60C1            STR              r1, [r0, #GPTMCTL]
  269 000001D6         ; change timeout
  270 000001D6 F85F 1160       LDR              r1, TIMEOUT
  271 000001DA 6281            STR              r1, [r0, #GPTMTAILR]
  272 000001DC         ;enable timer 0
  273 000001DC F04F 0101       MOV              r1, #0x01
  274 000001E0 60C1            STR              r1, [r0, #GPTMCTL]
  275 000001E2         ; clear interrupt
  276 000001E2 6241            STR              r1, [r0, #GPTMICR]
  277 000001E4         
  278 000001E4 E7FF            B                Fin
  279 000001E6         
  280 000001E6         Fin
  281 000001E6 F85F 01C8       LDR              r0, TMR0
  282 000001EA 69C1            LDR              r1, [r0, #GPTMRIS]
  283 000001EC F001 0101       AND              r1, #0x01
  284 000001F0 2901            CMP              r1, #0x01
  285 000001F2 D1F8            BNE              Fin
  286 000001F4         
  287 000001F4         ; clear interrupt
  288 000001F4 6241            STR              r1, [r0, #GPTMICR]
  289 000001F6         
  290 000001F6 EA02 0206       AND              r2, r6
  291 000001FA EA03 0307       AND              r3, r7
  292 000001FE         
  293 000001FE 42B2            CMP              r2, r6
  294 00000200 BF07            ITTEE            EQ
  295 00000202 43D2            MVNEQ            r2, r2
  296 00000204 43DB            MVNEQ            r3, r3
  297 00000206 4332            ORRNE            r2, r6
  298 00000208 433B            ORRNE            r3, r7
  299 0000020A         
  300 0000020A EA02 0206       AND              r2, r6
  301 0000020E EA03 0307       AND              r3, r7
  302 00000212         
  303 00000212 F7FF FFAE       BL               updateLEDs
  304 00000216         
  305 00000216 E7E6            B                Fin
  306 00000218         
  307 00000218         gameLoop
  308 00000218         ; check for end of game condition
  309 00000218         
  310 00000218         ; p1 victory?
  311 00000218 F5B2 7F80       CMP              r2, #0x100



ARM Macro Assembler    Page 8 


  312 0000021C D0D4            BEQ              FinPrep
  313 0000021E         
  314 0000021E         ; p2 victory?
  315 0000021E 2B02            CMP              r3, #0x2
  316 00000220 D0D2            BEQ              FinPrep
  317 00000222         
  318 00000222         ; grab random number, add one second
  319 00000222 F85F 0200       LDR              r0, TMR1
  320 00000226 6C84            LDR              r4, [r0, #GPTMTAR]
  321 00000228 F85F 51B0       LDR              r5, TIMEOUTSEC
  322 0000022C 442C            ADD              r4, r4, r5
  323 0000022E F04F 0100       MOV              r1, #0
  324 00000232 F85F 0214       LDR              r0, TMR0
  325 00000236         ; disable timer 0
  326 00000236 60C1            STR              r1, [r0, #GPTMCTL]
  327 00000238         ; change timeout
  328 00000238 6284            STR              r4, [r0, #GPTMTAILR]
  329 0000023A         ;enable timer 0
  330 0000023A F04F 0101       MOV              r1, #0x01
  331 0000023E 60C1            STR              r1, [r0, #GPTMCTL]
  332 00000240         ; clear interrupt
  333 00000240 6241            STR              r1, [r0, #GPTMICR]
  334 00000242 F04F 0100       MOV              r1, #0
  335 00000246         ; wait for timeout
  336 00000246 F000 F896       BL               waitForTimeout
  337 0000024A         ; clear timeout
  338 0000024A F04F 0101       MOV              r1, #1
  339 0000024E 6241            STR              r1, [r0, #GPTMICR]
  340 00000250         ; move users back
  341 00000250 EA4F 0252       LSR              r2, #1
  342 00000254 EA4F 0343       LSL              r3, #1
  343 00000258         
  344 00000258 F7FF FF8B       BL               updateLEDs
  345 0000025C         
  346 0000025C E7FF            B                waitForPlayerMove
  347 0000025E         
  348 0000025E         
  349 0000025E         waitForPlayerMove
  350 0000025E         ; read input buttons
  351 0000025E F85F 0258       LDR              r0, GPIOA
  352 00000262 F8D0 13FC       LDR              r1, [r0, #GPIODATA]
  353 00000266 F001 01C0       AND              r1, r1, #0xC0
  354 0000026A         ; check if player 1 moved first
  355 0000026A 2940            CMP              r1, #0x40
  356 0000026C D031            BEQ              P2Counter
  357 0000026E         
  358 0000026E         
  359 0000026E         ; check if player 2 moved first
  360 0000026E 2980            CMP              r1, #0x80
  361 00000270 D000            BEQ              P1Counter
  362 00000272         
  363 00000272         ; neither player moved, wait
  364 00000272 E7F4            B                waitForPlayerMove
  365 00000274         
  366 00000274         P1Counter
  367 00000274         ; p2 has responded, wait for player 1 to respond within 
                       timeout
  368 00000274         
  369 00000274         ; move p2 right as per move



ARM Macro Assembler    Page 9 


  370 00000274 EA4F 0353       LSR              r3, #1
  371 00000278 F7FF FF7B       BL               updateLEDs
  372 0000027C         
  373 0000027C         ; get player response multipliers
  374 0000027C         ; multipliers are 2-bit numbers, per
  375 0000027C         ; each player
  376 0000027C         ; pins are on PF.0:3
  377 0000027C         
  378 0000027C F85F 0264       LDR              r0, GPIOF
  379 00000280 F8D0 43FC       LDR              r4, [r0, #GPIODATA]
  380 00000284         ; let bits PF.0:1 be player 1's mult bits
  381 00000284 F004 0403       AND              r4, r4, #0x03
  382 00000288         
  383 00000288         ; player delay is 2^(-min(d, 4))*(320-80*Sn) ms
  384 00000288 2F04            CMP              r7, #4
  385 0000028A         
  386 0000028A BF8C            ITE              HI
  387 0000028C 46B8            MOVHI            r8, r7
  388 0000028E F04F 0804       MOVLS            r8, #4
  389 00000292         
  390 00000292 F85F 9214       LDR              r9, MS320
  391 00000296 F85F A214       LDR              r10, MS80
  392 0000029A FB04 FA0A       MUL              r10, r4, r10 ; 80*Sn
  393 0000029E EBA9 090A       SUB              r9, r9, r10 ; 320-80*Sn
  394 000002A2         
  395 000002A2 FA29 F908       LSR              r9, r8      ; 2^(-r8)*(320-80*S
                                                            n)
  396 000002A6         
  397 000002A6         ; load timer with new value, wait for
  398 000002A6         ; timeout or response
  399 000002A6 F04F 0100       MOV              r1, #0
  400 000002AA F85F 028C       LDR              r0, TMR0
  401 000002AE         ; disable timer 0
  402 000002AE 60C1            STR              r1, [r0, #GPTMCTL]
  403 000002B0         ; change timeout
  404 000002B0 F8C0 9028       STR              r9, [r0, #GPTMTAILR]
  405 000002B4         ;enable timer 0
  406 000002B4 F04F 0101       MOV              r1, #0x01
  407 000002B8 60C1            STR              r1, [r0, #GPTMCTL]
  408 000002BA         ; clear interrupt
  409 000002BA 6241            STR              r1, [r0, #GPTMICR]
  410 000002BC         
  411 000002BC         ; let r4 be the response mask
  412 000002BC F04F 0440       MOV              r4, #0x40
  413 000002C0         
  414 000002C0 F000 F840       BL               waitForAction
  415 000002C4         
  416 000002C4         ; player 1 failed to respond, advance player 2
  417 000002C4 EA4F 0353       LSR              r3, #1
  418 000002C8         
  419 000002C8         ; round ended with victory, reset drawcount
  420 000002C8 F04F 0700       MOV              r7, #0
  421 000002CC         
  422 000002CC F7FF FF51       BL               updateLEDs
  423 000002D0         
  424 000002D0 E7A2            B                gameLoop
  425 000002D2         
  426 000002D2         P2Counter
  427 000002D2         



ARM Macro Assembler    Page 10 


  428 000002D2         ; move player 1 as per move
  429 000002D2 EA4F 0242       LSL              r2, #1
  430 000002D6         
  431 000002D6 F7FF FF4C       BL               updateLEDs
  432 000002DA         
  433 000002DA         ; get player response multipliers
  434 000002DA         ; multipliers are 2-bit numbers, per
  435 000002DA         ; each player
  436 000002DA         ; pins are on PF.0:3
  437 000002DA         
  438 000002DA F85F 02C0       LDR              r0, GPIOF
  439 000002DE F8D0 43FC       LDR              r4, [r0, #GPIODATA]
  440 000002E2 F004 040C       AND              r4, r4, #0x0C
  441 000002E6 EA4F 0494       LSR              r4, #2
  442 000002EA         
  443 000002EA         ; let bits PF.2:3 be player 2's mult bits
  444 000002EA         ; let r4 store player 2's mult bits
  445 000002EA         ; let r7 store number of drawn moves
  446 000002EA F85F 02D0       LDR              r0, GPIOF
  447 000002EE F8D0 43FC       LDR              r4, [r0, #GPIODATA]
  448 000002F2 F004 040C       AND              r4, r4, #0x0C
  449 000002F6 EA4F 0494       LSR              r4, #2
  450 000002FA         
  451 000002FA         ; player delay is 2^(-min(d, 4))*(320-80*Sn) ms
  452 000002FA 2F04            CMP              r7, #4
  453 000002FC         
  454 000002FC BF8C            ITE              HI
  455 000002FE 46B8            MOVHI            r8, r7
  456 00000300 F04F 0804       MOVLS            r8, #4
  457 00000304         
  458 00000304 F85F 9288       LDR              r9, MS320
  459 00000308 F85F A288       LDR              r10, MS80
  460 0000030C FB04 FA0A       MUL              r10, r4, r10 ; 80*Sn
  461 00000310 EBA9 090A       SUB              r9, r9, r10 ; 320-80*Sn
  462 00000314         
  463 00000314 FA29 F908       LSR              r9, r8      ; 2^(-r8)*(320-80*S
                                                            n)
  464 00000318         
  465 00000318         ; load timer with new value, wait for
  466 00000318         ; timeout or response
  467 00000318 F04F 0100       MOV              r1, #0
  468 0000031C F85F 0300       LDR              r0, TMR0
  469 00000320         ; disable timer 0
  470 00000320 60C1            STR              r1, [r0, #GPTMCTL]
  471 00000322         ; change timeout
  472 00000322 F8C0 9028       STR              r9, [r0, #GPTMTAILR]
  473 00000326         ;enable timer 0
  474 00000326 F04F 0101       MOV              r1, #0x01
  475 0000032A 60C1            STR              r1, [r0, #GPTMCTL]
  476 0000032C         ; clear interrupt
  477 0000032C 6241            STR              r1, [r0, #GPTMICR]
  478 0000032E         
  479 0000032E         ; let r4 be the response mask
  480 0000032E F04F 0480       MOV              r4, #0x80
  481 00000332         
  482 00000332 F000 F807       BL               waitForAction
  483 00000336         
  484 00000336         ; player 2 failed to respond, advance player 1
  485 00000336 EA4F 0242       LSL              r2, #1



ARM Macro Assembler    Page 11 


  486 0000033A         
  487 0000033A         ; round ended with victory, reset drawcount
  488 0000033A F04F 0700       MOV              r7, #0
  489 0000033E         
  490 0000033E F7FF FF18       BL               updateLEDs
  491 00000342         
  492 00000342 E769            B                gameLoop
  493 00000344         
  494 00000344         waitForAction
  495 00000344         ; check timeout
  496 00000344 F85F 0328       LDR              r0, TMR0
  497 00000348 69C1            LDR              r1, [r0, #GPTMRIS]
  498 0000034A F001 0101       AND              r1, #1
  499 0000034E 2901            CMP              r1, #0x01
  500 00000350         
  501 00000350         ; if timeout return to counter function
  502 00000350 D010            BEQ              returnPlayerCounter
  503 00000352         
  504 00000352         ; check player response
  505 00000352 F85F 034C       LDR              r0, GPIOA
  506 00000356 F8D0 13FC       LDR              r1, [r0, #GPIODATA]
  507 0000035A         
  508 0000035A         ; and off other data
  509 0000035A EA01 0104       AND              r1, r1, r4
  510 0000035E         
  511 0000035E 42A1            CMP              r1, r4
  512 00000360 D1F0            BNE              waitForAction ; no response
  513 00000362         
  514 00000362         ; player responded
  515 00000362         ; based on mask, move respective player back into positi
                       on
  516 00000362 2940            CMP              r1, #0x40
  517 00000364 BF0C            ITE              EQ
  518 00000366 0052            LSLEQ            r2, #1
  519 00000368 085B            LSRNE            r3, #1
  520 0000036A         
  521 0000036A         ; no need to return to previous function, BL is fine
  522 0000036A F7FF FF02       BL               updateLEDs
  523 0000036E         
  524 0000036E         ; since player responded, increment draw reg
  525 0000036E F107 0701       ADD              r7, #1
  526 00000372         
  527 00000372 E751            B                gameLoop
  528 00000374         
  529 00000374         returnPlayerCounter
  530 00000374 4770            BX               lr
  531 00000376         
  532 00000376         
  533 00000376         waitForTimeout
  534 00000376         ; else, check timeout
  535 00000376 F85F 0358       LDR              r0, TMR0
  536 0000037A 69C1            LDR              r1, [r0, #GPTMRIS]
  537 0000037C F04F 0401       MOV              r4, #0x01
  538 00000380 EA01 0104       AND              r1, r1, r4
  539 00000384 2901            CMP              r1, #0x01
  540 00000386 D000            BEQ              returnGameLoop
  541 00000388 E7F5            B                waitForTimeout
  542 0000038A         
  543 0000038A         returnGameLoop



ARM Macro Assembler    Page 12 


  544 0000038A 4770            BX               lr
  545 0000038C         
  546 0000038C         playerReadyLoop
  547 0000038C         ; check inputs, LED4=p1, LED5=p2
  548 0000038C         ; A6=p1 button, A7=p2 button
  549 0000038C F85F 0388       LDR              r0, GPIOA
  550 00000390 F8D0 13FC       LDR              r1, [r0, #GPIODATA]
  551 00000394 F001 01C0       AND              r1, r1, #0xC0
  552 00000398 EA4F 0191       LSR              r1, r1, #2  ; shift bits into p
                                                            osition
  553 0000039C EA42 0201       ORR              r2, r1      ; or into response 
                                                            flag
  554 000003A0 F85F 0398       LDR              r0, GPIOB
  555 000003A4 F04F 01FF       MOV              r1, #0xFF
  556 000003A8 2A30            CMP              r2, #0x30   ; check if both pla
                                                            yers have responded
                                                            
  557 000003AA BF04            ITT              EQ
  558 000003AC F8D0 13FC       LDREQ            r1, [r0, #GPIODATA]
  559 000003B0 E009            BEQ              returnMain
  560 000003B2         
  561 000003B2         ; else, check timeout
  562 000003B2 F85F 0394       LDR              r0, TMR0
  563 000003B6 69C1            LDR              r1, [r0, #GPTMRIS]
  564 000003B8 F04F 0301       MOV              r3, #0x01
  565 000003BC EA01 0103       AND              r1, r1, r3
  566 000003C0 2901            CMP              r1, #0x01   ; sets z if zero
  567 000003C2 D001            BEQ              toggleWaitLeds
  568 000003C4         
  569 000003C4         ; else, return to ready loop
  570 000003C4 E7E2            B                playerReadyLoop
  571 000003C6         
  572 000003C6         returnMain
  573 000003C6 4770            BX               lr
  574 000003C8         
  575 000003C8         toggleWaitLeds
  576 000003C8         ; timer tripped, reset expiry flag
  577 000003C8 F04F 0101       MOV              r1, #1
  578 000003CC 6241            STR              r1, [r0, #GPTMICR]
  579 000003CE         
  580 000003CE         ; toggle LEDs 4:5 (based on response flags)
  581 000003CE F85F 03C4       LDR              r0, GPIOB
  582 000003D2 F8D0 13FC       LDR              r1, [r0, #GPIODATA]
  583 000003D6 EA6F 0101       MVN              r1, r1
  584 000003DA F001 01FF       AND              r1, #0xFF
  585 000003DE F041 01CF       ORR              r1, #0xCF   ; active low
  586 000003E2 EA6F 0302       MVN              r3, r2
  587 000003E6 F003 03FF       AND              r3, #0xFF
  588 000003EA EA01 0103       AND              r1, r1, r3  ; keep led on if pl
                                                            ayer responded
  589 000003EE         
  590 000003EE         
  591 000003EE F85F 03E4       LDR              r0, GPIOB
  592 000003F2 F8C0 13FC       STR              r1, [r0, #GPIODATA]
  593 000003F6         
  594 000003F6 E7C9            B                playerReadyLoop
  595 000003F8         
  596 000003F8                 ALIGN
  597 000003F8                 END



ARM Macro Assembler    Page 13 


              4C4F434B 
Command Line: --debug --xref --cpu=Cortex-M4.fp --apcs=interwork --depend=.\mai
n.d -o.\main.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM
\Inc\TI\TM4C123 --predefine="__EVAL SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 11 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 13 in file main.s
   Uses
      None
Comment: .text unused
CLKSET 00000050

Symbol: CLKSET
   Definitions
      At line 73 in file main.s
   Uses
      At line 105 in file main.s
Comment: CLKSET used once
Fin 000001E6

Symbol: Fin
   Definitions
      At line 280 in file main.s
   Uses
      At line 278 in file main.s
      At line 285 in file main.s
      At line 305 in file main.s

FinPrep 000001C8

Symbol: FinPrep
   Definitions
      At line 259 in file main.s
   Uses
      At line 312 in file main.s
      At line 316 in file main.s

GPIOA 00000008

Symbol: GPIOA
   Definitions
      At line 51 in file main.s
   Uses
      At line 114 in file main.s
      At line 235 in file main.s
      At line 351 in file main.s
      At line 505 in file main.s
      At line 549 in file main.s

GPIOB 0000000C

Symbol: GPIOB
   Definitions
      At line 52 in file main.s
   Uses
      At line 124 in file main.s
      At line 232 in file main.s
      At line 247 in file main.s
      At line 554 in file main.s
      At line 581 in file main.s
      At line 591 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


GPIOC 00000010

Symbol: GPIOC
   Definitions
      At line 53 in file main.s
   Uses
      None
Comment: GPIOC unused
GPIOD 00000014

Symbol: GPIOD
   Definitions
      At line 54 in file main.s
   Uses
      None
Comment: GPIOD unused
GPIOE 00000018

Symbol: GPIOE
   Definitions
      At line 55 in file main.s
   Uses
      None
Comment: GPIOE unused
GPIOF 0000001C

Symbol: GPIOF
   Definitions
      At line 56 in file main.s
   Uses
      At line 135 in file main.s
      At line 378 in file main.s
      At line 438 in file main.s
      At line 446 in file main.s

GPIO_init 0000011C

Symbol: GPIO_init
   Definitions
      At line 167 in file main.s
   Uses
      At line 117 in file main.s
      At line 127 in file main.s
      At line 146 in file main.s

GPTMCFGMASK 00000070

Symbol: GPTMCFGMASK
   Definitions
      At line 82 in file main.s
   Uses
      At line 196 in file main.s
Comment: GPTMCFGMASK used once
GPTMCTLMASK 0000006C

Symbol: GPTMCTLMASK
   Definitions
      At line 81 in file main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 192 in file main.s
Comment: GPTMCTLMASK used once
GPTMOS 00000000

Symbol: GPTMOS
   Definitions
      At line 45 in file main.s
   Uses
      None
Comment: GPTMOS unused
GPTMPM 00000004

Symbol: GPTMPM
   Definitions
      At line 46 in file main.s
   Uses
      At line 152 in file main.s
      At line 160 in file main.s

GPTMTAMRMASK 00000074

Symbol: GPTMTAMRMASK
   Definitions
      At line 83 in file main.s
   Uses
      At line 200 in file main.s
Comment: GPTMTAMRMASK used once
MS320 00000080

Symbol: MS320
   Definitions
      At line 90 in file main.s
   Uses
      At line 390 in file main.s
      At line 458 in file main.s

MS80 00000084

Symbol: MS80
   Definitions
      At line 91 in file main.s
   Uses
      At line 391 in file main.s
      At line 459 in file main.s

P1Counter 00000274

Symbol: P1Counter
   Definitions
      At line 366 in file main.s
   Uses
      At line 361 in file main.s
Comment: P1Counter used once
P2Counter 000002D2

Symbol: P2Counter
   Definitions
      At line 426 in file main.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 356 in file main.s
Comment: P2Counter used once
PORTAINSET 00000058

Symbol: PORTAINSET
   Definitions
      At line 75 in file main.s
   Uses
      At line 116 in file main.s
Comment: PORTAINSET used once
PORTAOUTSET 00000054

Symbol: PORTAOUTSET
   Definitions
      At line 74 in file main.s
   Uses
      At line 115 in file main.s
Comment: PORTAOUTSET used once
PORTBINSET 00000060

Symbol: PORTBINSET
   Definitions
      At line 77 in file main.s
   Uses
      At line 126 in file main.s
Comment: PORTBINSET used once
PORTBOUTSET 0000005C

Symbol: PORTBOUTSET
   Definitions
      At line 76 in file main.s
   Uses
      At line 125 in file main.s
Comment: PORTBOUTSET used once
PORTFINSET 00000068

Symbol: PORTFINSET
   Definitions
      At line 79 in file main.s
   Uses
      At line 145 in file main.s
Comment: PORTFINSET used once
PORTFOUTSET 00000064

Symbol: PORTFOUTSET
   Definitions
      At line 78 in file main.s
   Uses
      At line 144 in file main.s
Comment: PORTFOUTSET used once
RCGC1 00000090

Symbol: RCGC1
   Definitions
      At line 97 in file main.s
   Uses
      At line 109 in file main.s
Comment: RCGC1 used once



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

RCGCGPIO 0000008C

Symbol: RCGCGPIO
   Definitions
      At line 96 in file main.s
   Uses
      At line 104 in file main.s
Comment: RCGCGPIO used once
SETUP 00000094

Symbol: SETUP
   Definitions
      At line 99 in file main.s
   Uses
      None
Comment: SETUP unused
Start 00000098

Symbol: Start
   Definitions
      At line 101 in file main.s
   Uses
      At line 14 in file main.s
Comment: Start used once
TIMEOUT 00000078

Symbol: TIMEOUT
   Definitions
      At line 86 in file main.s
   Uses
      At line 151 in file main.s
      At line 270 in file main.s

TIMEOUTSEC 0000007C

Symbol: TIMEOUTSEC
   Definitions
      At line 87 in file main.s
   Uses
      At line 159 in file main.s
      At line 321 in file main.s

TMR0 00000020

Symbol: TMR0
   Definitions
      At line 59 in file main.s
   Uses
      At line 150 in file main.s
      At line 266 in file main.s
      At line 281 in file main.s
      At line 324 in file main.s
      At line 400 in file main.s
      At line 468 in file main.s
      At line 496 in file main.s
      At line 535 in file main.s
      At line 562 in file main.s

TMR1 00000024



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols


Symbol: TMR1
   Definitions
      At line 60 in file main.s
   Uses
      At line 158 in file main.s
      At line 319 in file main.s

TMR2 00000028

Symbol: TMR2
   Definitions
      At line 61 in file main.s
   Uses
      None
Comment: TMR2 unused
TMR3 0000002C

Symbol: TMR3
   Definitions
      At line 62 in file main.s
   Uses
      None
Comment: TMR3 unused
TMR4 00000030

Symbol: TMR4
   Definitions
      At line 63 in file main.s
   Uses
      None
Comment: TMR4 unused
TMR5 00000034

Symbol: TMR5
   Definitions
      At line 64 in file main.s
   Uses
      None
Comment: TMR5 unused
TMRSET 00000088

Symbol: TMRSET
   Definitions
      At line 94 in file main.s
   Uses
      At line 110 in file main.s
Comment: TMRSET used once
TMR_init 00000136

Symbol: TMR_init
   Definitions
      At line 190 in file main.s
   Uses
      At line 153 in file main.s
      At line 161 in file main.s

WTMR0 00000038




ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Relocatable symbols

Symbol: WTMR0
   Definitions
      At line 65 in file main.s
   Uses
      None
Comment: WTMR0 unused
WTMR1 0000003C

Symbol: WTMR1
   Definitions
      At line 66 in file main.s
   Uses
      None
Comment: WTMR1 unused
WTMR2 00000040

Symbol: WTMR2
   Definitions
      At line 67 in file main.s
   Uses
      None
Comment: WTMR2 unused
WTMR3 00000044

Symbol: WTMR3
   Definitions
      At line 68 in file main.s
   Uses
      None
Comment: WTMR3 unused
WTMR4 00000048

Symbol: WTMR4
   Definitions
      At line 69 in file main.s
   Uses
      None
Comment: WTMR4 unused
WTMR5 0000004C

Symbol: WTMR5
   Definitions
      At line 70 in file main.s
   Uses
      None
Comment: WTMR5 unused
gameLoop 00000218

Symbol: gameLoop
   Definitions
      At line 307 in file main.s
   Uses
      At line 257 in file main.s
      At line 424 in file main.s
      At line 492 in file main.s
      At line 527 in file main.s

main 000001A6




ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Relocatable symbols

Symbol: main
   Definitions
      At line 240 in file main.s
   Uses
      At line 165 in file main.s
Comment: main used once
playerReadyLoop 0000038C

Symbol: playerReadyLoop
   Definitions
      At line 546 in file main.s
   Uses
      At line 244 in file main.s
      At line 570 in file main.s
      At line 594 in file main.s

returnGameLoop 0000038A

Symbol: returnGameLoop
   Definitions
      At line 543 in file main.s
   Uses
      At line 540 in file main.s
Comment: returnGameLoop used once
returnMain 000003C6

Symbol: returnMain
   Definitions
      At line 572 in file main.s
   Uses
      At line 559 in file main.s
Comment: returnMain used once
returnPlayerCounter 00000374

Symbol: returnPlayerCounter
   Definitions
      At line 529 in file main.s
   Uses
      At line 502 in file main.s
Comment: returnPlayerCounter used once
toggleWaitLeds 000003C8

Symbol: toggleWaitLeds
   Definitions
      At line 575 in file main.s
   Uses
      At line 567 in file main.s
Comment: toggleWaitLeds used once
updateLEDs 00000172

Symbol: updateLEDs
   Definitions
      At line 218 in file main.s
   Uses
      At line 303 in file main.s
      At line 344 in file main.s
      At line 371 in file main.s
      At line 422 in file main.s
      At line 431 in file main.s



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Relocatable symbols

      At line 490 in file main.s
      At line 522 in file main.s

waitForAction 00000344

Symbol: waitForAction
   Definitions
      At line 494 in file main.s
   Uses
      At line 414 in file main.s
      At line 482 in file main.s
      At line 512 in file main.s

waitForPlayerMove 0000025E

Symbol: waitForPlayerMove
   Definitions
      At line 349 in file main.s
   Uses
      At line 346 in file main.s
      At line 364 in file main.s

waitForTimeout 00000376

Symbol: waitForTimeout
   Definitions
      At line 533 in file main.s
   Uses
      At line 336 in file main.s
      At line 541 in file main.s

57 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIOCR 00000524

Symbol: GPIOCR
   Definitions
      At line 33 in file main.s
   Uses
      At line 141 in file main.s
Comment: GPIOCR used once
GPIODATA 000003FC

Symbol: GPIODATA
   Definitions
      At line 17 in file main.s
   Uses
      At line 121 in file main.s
      At line 130 in file main.s
      At line 233 in file main.s
      At line 236 in file main.s
      At line 249 in file main.s
      At line 352 in file main.s
      At line 379 in file main.s
      At line 439 in file main.s
      At line 447 in file main.s
      At line 506 in file main.s
      At line 550 in file main.s
      At line 558 in file main.s
      At line 582 in file main.s
      At line 592 in file main.s

GPIODEN 0000051C

Symbol: GPIODEN
   Definitions
      At line 31 in file main.s
   Uses
      At line 173 in file main.s
Comment: GPIODEN used once
GPIODIR 00000400

Symbol: GPIODIR
   Definitions
      At line 18 in file main.s
   Uses
      At line 169 in file main.s
Comment: GPIODIR used once
GPIODR2R 00000500

Symbol: GPIODR2R
   Definitions
      At line 25 in file main.s
   Uses
      At line 170 in file main.s
Comment: GPIODR2R used once
GPIODR4R 00000504

Symbol: GPIODR4R
   Definitions
      At line 26 in file main.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      None
Comment: GPIODR4R unused
GPIODR8R 00000508

Symbol: GPIODR8R
   Definitions
      At line 27 in file main.s
   Uses
      None
Comment: GPIODR8R unused
GPIOIBE 00000408

Symbol: GPIOIBE
   Definitions
      At line 20 in file main.s
   Uses
      None
Comment: GPIOIBE unused
GPIOIEV 0000040C

Symbol: GPIOIEV
   Definitions
      At line 21 in file main.s
   Uses
      None
Comment: GPIOIEV unused
GPIOIM 00000410

Symbol: GPIOIM
   Definitions
      At line 22 in file main.s
   Uses
      None
Comment: GPIOIM unused
GPIOIS 00000404

Symbol: GPIOIS
   Definitions
      At line 19 in file main.s
   Uses
      None
Comment: GPIOIS unused
GPIOLOCK 00000520

Symbol: GPIOLOCK
   Definitions
      At line 32 in file main.s
   Uses
      At line 137 in file main.s
Comment: GPIOLOCK used once
GPIOMIS 00000418

Symbol: GPIOMIS
   Definitions
      At line 24 in file main.s
   Uses
      None
Comment: GPIOMIS unused
GPIOODR 0000050C



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIOODR
   Definitions
      At line 28 in file main.s
   Uses
      At line 171 in file main.s
Comment: GPIOODR used once
GPIOPDR 00000514

Symbol: GPIOPDR
   Definitions
      At line 30 in file main.s
   Uses
      At line 172 in file main.s
Comment: GPIOPDR used once
GPIOPUR 00000510

Symbol: GPIOPUR
   Definitions
      At line 29 in file main.s
   Uses
      None
Comment: GPIOPUR unused
GPIORIS 00000414

Symbol: GPIORIS
   Definitions
      At line 23 in file main.s
   Uses
      None
Comment: GPIORIS unused
GPTMCFG 00000000

Symbol: GPTMCFG
   Definitions
      At line 36 in file main.s
   Uses
      At line 195 in file main.s
      At line 198 in file main.s

GPTMCTL 0000000C

Symbol: GPTMCTL
   Definitions
      At line 39 in file main.s
   Uses
      At line 191 in file main.s
      At line 194 in file main.s
      At line 206 in file main.s
      At line 268 in file main.s
      At line 274 in file main.s
      At line 326 in file main.s
      At line 331 in file main.s
      At line 402 in file main.s
      At line 407 in file main.s
      At line 470 in file main.s
      At line 475 in file main.s

GPTMICR 00000024



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols


Symbol: GPTMICR
   Definitions
      At line 41 in file main.s
   Uses
      At line 209 in file main.s
      At line 276 in file main.s
      At line 288 in file main.s
      At line 333 in file main.s
      At line 339 in file main.s
      At line 409 in file main.s
      At line 477 in file main.s
      At line 578 in file main.s

GPTMRIS 0000001C

Symbol: GPTMRIS
   Definitions
      At line 40 in file main.s
   Uses
      At line 282 in file main.s
      At line 497 in file main.s
      At line 536 in file main.s
      At line 563 in file main.s

GPTMTAILR 00000028

Symbol: GPTMTAILR
   Definitions
      At line 42 in file main.s
   Uses
      At line 204 in file main.s
      At line 271 in file main.s
      At line 328 in file main.s
      At line 404 in file main.s
      At line 472 in file main.s

GPTMTAMR 00000004

Symbol: GPTMTAMR
   Definitions
      At line 37 in file main.s
   Uses
      At line 199 in file main.s
      At line 203 in file main.s

GPTMTAR 00000048

Symbol: GPTMTAR
   Definitions
      At line 44 in file main.s
   Uses
      At line 320 in file main.s
Comment: GPTMTAR used once
GPTMTBLRR 0000002C

Symbol: GPTMTBLRR
   Definitions
      At line 43 in file main.s



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: GPTMTBLRR unused
GPTMTBMR 00000008

Symbol: GPTMTBMR
   Definitions
      At line 38 in file main.s
   Uses
      None
Comment: GPTMTBMR unused
26 symbols
418 symbols in table
